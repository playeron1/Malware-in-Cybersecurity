import os
import time

def monitor_directory(directory_path):
    monitored_extensions = ['.txt', '.docx', '.xlsx']  # Add more file extensions to monitor

    while True:
        try:
            for filename in os.listdir(directory_path):
                if any(filename.endswith(ext) for ext in monitored_extensions):
                    file_path = os.path.join(directory_path, filename)
                    check_file_activity(file_path)
        except Exception as e:
            print(f"Error while monitoring directory: {e}")

        time.sleep(60)  # Check every minute

def check_file_activity(file_path):
    try:
        # Implement logic to analyze file activity (e.g., access frequency, unusual modifications)
        # For simplicity, this example checks if the file size has changed significantly.
        current_size = os.path.getsize(file_path)
        if file_path in file_sizes and abs(file_sizes[file_path] - current_size) > 100:
            print(f"Potential ransomware activity detected in file: {file_path}")
        file_sizes[file_path] = current_size
    except Exception as e:
        print(f"Error while checking file activity: {e}")

if __name__ == "__main__":
    monitored_directory = "/path/to/monitor"  # Replace with the directory you want to monitor
    file_sizes = {}  # Dictionary to store file sizes

    monitor_directory(monitored_directory)
