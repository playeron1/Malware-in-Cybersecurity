import hashlib

def calculate_hash(file_path):
    # Calculate the SHA-256 hash of the file
    sha256 = hashlib.sha256()
    with open(file_path, "rb") as file:
        while chunk := file.read(8192):
            sha256.update(chunk)
    return sha256.hexdigest()

def validate_integrity(file_path, expected_hash):
    # Validate the integrity of the file against the expected hash
    actual_hash = calculate_hash(file_path)
    if actual_hash == expected_hash:
        print("Integrity check passed. File has not been tampered.")
        return True
    else:
        print("Integrity check failed. Possible supply chain attack!")
        return False

if __name__ == "__main__":
    # Provide the expected hash value for the legitimate file
    expected_hash = "your_expected_hash_value"

    # Specify the path to the file to be checked
    file_path = "path/to/your/software"

    # Perform integrity check
    validate_integrity(file_path, expected_hash)
